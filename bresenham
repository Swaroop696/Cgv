//bresenham

#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<GL/glut.h>

int xx,xend,yy,yend;

void myInit();
void disp();
void bresenham();
void setPixel(int x,int y);

int main(int argc,char *argv[]){
    glutInit(&argc,argv);
    glutInitDisplayMode(GLUT_RGB|GLUT_SINGLE);
    glutInitWindowPosition(100,100);
    glutInitWindowSize(500,500);
    glutCreateWindow("lab1");
    myInit();
    printf("Enter the first cordinates");
    scanf("%d %d",&xx,&yy);

    printf("Enter the second cordinates");
    scanf("%d %d",&xend,&yend);

    glutDisplayFunc(disp);
    glutMainLoop();
}

void myInit(){
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0,500,0,500);
    glMatrixMode(GL_MODELVIEW);
}

void disp(){
    glClearColor(1,1,1,1);
    glClear(GL_COLOR_BUFFER_BIT);
    glViewport(300,300,100,100);
    glPointSize(5);
    bresenham();
    glFlush();
}

void bresenham(){
    int p,x,y;
    if(xx>xend){
        x=xend;
        y=yend;
        xend=xx;
        yend=yy;
    }
    else{
        x=xx;
        y=yy;
    }

    int dx=abs(xend-x);
    int dy= abs(yend-y);
    int twody=2*dy;
    int twodx=2*dx;
    int twodyMindx=2*(dy-dx);
    int twodxMindy=2*(dx-dy);

    if(dx>dy){
        p=2*dy-dx;
        setPixel(x,y);
        while(x<xend){
            x=x+1;
            if(p<0){
                p=p+twody;
            }
            else{
                y=y+1;
                p=p+twodyMindx;
            }
            setPixel(x,y);
        }
    }
    else{
        p=2*dx-dy;
        setPixel(x,y);
        while(y<yend){
            y=y+1;
            if(p<0){
                p=p+twodx;
            }
            else{
                y=y+1;
                p=p+twodxMindy;
            }
            setPixel(x,y);
        }
    }
}

void setPixel(int x,int y){
    glColor3f(1,0,0);
    glBegin(GL_POINTS);
    glVertex2f(x,y);
    glEnd();
    glFlush();
}
